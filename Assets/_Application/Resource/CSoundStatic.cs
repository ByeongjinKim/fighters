using System.Collections;
using System.Collections.Generic;
using System.Xml;
using System;
using UnityEngine;

//-----------------------------------------------------------------------------------------------------------------------------------
// 사운드 정보를 처리하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class CSoundStatic : AppsItemListener
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
    public class tagData : _tagData
    {
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		public List<tagSoundStatic>		SoundStatics	= new List<tagSoundStatic>();

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
    };
    public tagData		data		= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Awake()
	{
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		Initialize( (data), "Sounds", UPDATE_CLASS.Sound.ToString(), (null) );

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // 사운드 객체를 생성하기 위한 함수 
	//-------------------------------------------------------------------------------------------------------------------------------
    protected override tagAppsItem New()
    {
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return new tagSoundStatic();

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 사운드 객체를 삭제하기 위한 함수 
	//-------------------------------------------------------------------------------------------------------------------------------
	protected override void OnDelete( tagAppsItem appsItem )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (appsItem)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		GetList().Remove( appsItem as tagSoundStatic );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 사운드 리스트를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public List<tagSoundStatic> GetList()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return (data.SoundStatics);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
	// 사운드 정보를 검색하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public tagSoundStatic Find( string id )
    {
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (id)==(null) ) return (null);

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        foreach( tagSoundStatic soundstatic in GetList() )
        {
            //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
            if( (soundstatic.id)==(id) )
            {
				return (soundstatic);
            }

            //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
        }

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return (null);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 배경음악을 재생하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Bgm( tagSoundStatic soundstatic, bool loop=(true) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (soundstatic)==(null) ) return;
		if( soundstatic.unavailable ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (soundstatic.audioClip)!=(null) )
		{
			app.Bgm.Play( (soundstatic.audioClip), (soundstatic.volume), (loop) );
		}
		else
//		if( Func.IsSoundFile(soundstatic.AssetBundle().Url) )
		if( Func.Is(soundstatic.AssetBundle().url) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			SoundDesc	desc	= new SoundDesc();
			(desc.soundstatic)	= (soundstatic);
			(desc.loop)			= (loop);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			app.Download.ON( soundstatic.AssetBundle(), (funcBgm), (desc) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 배경음악을 재생하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Bgm( string id, bool loop=(true) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (id)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Bgm( Find(id), (loop) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 배경음악을 재생하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void funcBgm( object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (wParam)==(null) ) return;
		if( (lParam)==(null) || (lParam as tagAssetBundle)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		SoundDesc		desc			= (SoundDesc)(wParam);
		tagAssetBundle	assetBundle		= (lParam as tagAssetBundle);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagSoundStatic	soundstatic		= (desc.soundstatic);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		/*
		if( (assetBundle.bundle)!=(null) && (assetBundle.bundle.audioClip)!=(null) )
		{
			(soundstatic.audioClip)		= (assetBundle.bundle.audioClip);
		}
		else
		*/
		if( (assetBundle)!=(null) && (assetBundle.bundle)!=(null) )
		{
			UnityEngine.Object[] objArray = assetBundle.bundle.LoadAllAssets(typeof(AudioClip));
			foreach( AudioClip clip in objArray )
			{
				(soundstatic.audioClip) = (clip);
				break;
			}
		}
#if UNITY_EDITOR
		else
		{
			Debug.Log(soundstatic);
		}
#endif

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (soundstatic.audioClip)!=(null) && !(soundstatic.unavailable) )
		{
			objSound sound = app.Bgm.Play( (soundstatic.audioClip), (soundstatic.volume), (desc.loop) );
			if( (sound)!=(null) )
			{
				(sound.data.soundstatic) = (soundstatic);
				soundstatic.AssetBundle().Take( sound );
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 배경음악을 재생하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Play( tagSoundStatic soundstatic, float delay=(0f), Transform parent=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (soundstatic)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (soundstatic.LatestPlayTime)>(0) && (Time.time-soundstatic.LatestPlayTime)<(soundstatic.interval) )
		{
			//재생 간격이 너무 좁게 호출되었을 경우, 중단함
			return;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 마지막 재생 시간을 업데이트 함 (inverval을 확인하기 위한 용도)
		//---------------------------------------------------------------------------------------------------------------------------
		(soundstatic.LatestPlayTime)	= (Time.time);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( soundstatic.AssetBundle().Is() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		else
		if( Func.Is(soundstatic.resource) )
		{
			tagResource resource = app.Resource.Find(soundstatic.resource);
			if( (resource)!=(null) )
			{
				SoundDesc desc = new SoundDesc();
				(desc.tag)		= (soundstatic.tag);
				(desc.volume)	= (soundstatic.volume);
				(desc.delay)	= (delay);
				(desc.time)		= (Time.time);
				app.Download.ON( resource.AssetBundle(), (funcPlay), (desc), resource.AssetBundle() );
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 배경음악을 재생하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void funcPlay( object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (wParam)==(null) ) return;
		if( (lParam)==(null) || (lParam as tagAssetBundle)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		SoundDesc			desc			= (SoundDesc)(wParam);
		tagAssetBundle		assetBundle		= (lParam as tagAssetBundle);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (assetBundle.bundle)!=(null) )
		{
			AudioClip clip = (assetBundle.bundle.LoadAsset( (desc.tag), typeof(AudioClip) ) as AudioClip);
			if( (clip)!=(null) )
			{
				app.Sound.Play( (clip), (desc.volume), (desc.delay)-Mathf.Max((0), (Time.time-desc.time)) );
			}
			else
			{
				Debug.Log( "사운드 정보를 찾을 수 없습니다. : "+(desc.soundstatic)+", "+(desc.tag) );
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 배경음악을 재생하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Play( string id, float delay=(0f) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (id)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Play( Find(id), (delay) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 배경음악을 재생하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Play( tagSoundStatic soundstatic, string name, float delay=(0f), Transform parent=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (soundstatic)==(null) ) return;
		if( (name)==(null) ) return;
//		if( (parent)==(null) ) return;	//(NULL)값을 허용함

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.Sound.Play( Load( (soundstatic), (name) ), (soundstatic.volume), (delay), (parent) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 배경음악을 재생하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Play( string id, string name, float delay=(0f), Transform parent=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (id)==(null) ) return;
		if( (name)==(null) ) return;
//		if( (parent)==(null) ) return;	//(NULL)값을 허용함

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Play( Find(id), (name), (delay), (parent) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 리소스를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public AudioClip Load( tagSoundStatic soundstatic, string src )
	{
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (soundstatic)==(null) ) return (null);
		if( (src)==(null) ) return (null);

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (soundstatic.AssetBundle().bundle)!=(null) )
		{
			return (soundstatic.AssetBundle().bundle.LoadAsset( (src), typeof(AudioClip) ) as AudioClip);
		}

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return (null);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 리소스를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public AudioClip Load( string resource, string src )
	{
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (resource)==(null) ) return (null);
		if( (src)==(null) ) return (null);

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return Load( Find(resource), (src) );
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 로컬에 저장된 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void OnLoadCache( tagAppsItem appsItem, AppsParameter col=(null) )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (appsItem)==(null) ) return;
//		if( (col)==(null) ) return;	//(NULL)값을 허용함

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		tagSoundStatic		soundstatic		= (appsItem as tagSoundStatic);
		if( (soundstatic)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (col)!=(null) )
		{
			(soundstatic.volume)	= col.GetFloat("volume");
			(soundstatic.interval)	= col.GetFloat("interval");
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( !GetList().Contains(soundstatic) )
		{
			GetList().Add(soundstatic);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML 파일을 저장하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void OnXmlSave( XmlTextWriter xmlWriter, tagAppsItem appsItem )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (xmlWriter)==(null) ) return;
		if( (appsItem)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		tagSoundStatic		soundstatic		=(appsItem as tagSoundStatic);
		if( (soundstatic)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		CXml.WriteNodeValue( (xmlWriter), "volume",		(soundstatic.volume) );
		CXml.WriteNodeValue( (xmlWriter), "interval",	(soundstatic.interval) );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML 파일을 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void OnXmlLoad( XmlNode pNode, tagAppsItem appsItem )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (pNode)==(null) ) return;
		if( (appsItem)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		tagSoundStatic		soundstatic		=(appsItem as tagSoundStatic);
		if( (soundstatic)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		(soundstatic.volume)		= CXml.GetChildFloat( (pNode), "volume" );
		(soundstatic.interval)		= CXml.GetChildFloat( (pNode), "interval" );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------