using System.Collections;
using System.Collections.Generic;
using System.IO;
using UnityEngine.Networking;
using UnityEngine;

[System.Serializable]
public class HttpProtocol
{
	public UnityWebRequest		www					= null;
	public List<tagProgress>	Progresses			= new List<tagProgress>();

	public string				url					= null;
	public int					Version				= 0;
	public bool					Done				= false;
	public bool					Success				= false;
	public AudioClip			audioClip			= null;
	public AssetBundle			assetBundle			= null;
	public tagTexture			texture				= null;
	public string				text				= null;
	public byte[]				bytes				= null;
	public string				error				= null;
	
	private AsyncOperation		asyncOperation		= null;

	HttpProtocol( string url )
	{
		this.url		= url;
		this.Version	= -1;

		Apps.Download(url);
		this.www = Internet.Protocol( url );
		asyncOperation = www.SendWebRequest();
	}

	public static HttpProtocol New( string url )
	{
		if( !Library.Is(url) ) return null;
		return new HttpProtocol( url );
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 진행중인지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool IsProcess()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( tagProgress progress in this.Progresses  )
		{
			if( progress.IsProgress() )
			{
				//비동기 복호화 중, true를 반환함
				return true;
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		if( (this.www)==(null) ) return false;	//다운로드가 대기중일 경우 월드와이드웹 프로토콜을 생성하지 않기 때문에, 월드와이드웹 객체로 완료 여부를 판단할 수 없음
		if( (this.www)!=(null) && Func.Is(this.www.error) ) return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (this.www)!=(null) && (this.www.isDone) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( !Dispose() )
			{
				return true;
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return false;
		}
		/*
		else
		if( (this.www)!=(null) && (this.www.progress)>=(1) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( !Dispose() )
			{
				return true;
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return false;
		}
		*/

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return !(Done);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 성공했는지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool IsSuccess()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (www)!=(null) )
		{
			if( www.isDone )
			{
				Dispose();
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (Success);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// HTTP 프로토콜을 해제하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool Dispose()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( this.Done ) return true;
		if( (this.www)==(null) ) return true;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (www)!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( www.isDone )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				(error)		= (www.error);

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( (www.error)==(null) )
				{
					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					string Ext = Library.Ext(www.url);

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					if( (Ext)=="png" || (Ext)=="jpg" || (Ext)=="jpeg" || (Ext)=="tga" || (Ext)=="texture" )
					{
						//-----------------------------------------------------------------------------------------------------------
						// -
						//-----------------------------------------------------------------------------------------------------------
						if( Func.IsHttpProtocal(url) )
						{
							//-------------------------------------------------------------------------------------------------------
							// -
							//-------------------------------------------------------------------------------------------------------
							if( (Application.isEditor) && ( (this.texture)==(null) || (this.texture.isStreamingSave) ) )
							{
								Debug.Log( "(StreamingAssets) => "+Library.GetFileName(www.url)+".texture" );
								if( (Application.isEditor) && !Directory.Exists(CEngine.GetStreamingPath( (www.url), (false), (false) )) ) Func.CreateDirectory( CEngine.GetStreamingPath( (www.url), (false), (false) ) );
								Func.WriteAllBytes( CEngine.GetStreamingPath( (www.url), (false) ), CXml.CopyEncode( (www.downloadHandler.data), (SYSTEM.TEXTURE_ENCODE_DENSITY) ) );
							}
							else
							if( Platform.IsRuntime() && Func.IsHttpProtocal(www.url) && (this.texture.isCacheSave) )
							{
								//---------------------------------------------------------------------------------------------------
								// -
								//---------------------------------------------------------------------------------------------------
								if( !Directory.Exists(CEngine.GetCachePath()) ) Directory.CreateDirectory(CEngine.GetCachePath());

								//---------------------------------------------------------------------------------------------------
								// -
								//---------------------------------------------------------------------------------------------------
								Debug.Log( "(Cache) => "+Library.GetFileName(www.url)+".texture" );
								Func.WriteAllBytes( CEngine.GetCachePath()+"/"+Library.GetFileName(www.url)+".texture", CXml.CopyEncode( (www.downloadHandler.data), (SYSTEM.TEXTURE_ENCODE_DENSITY) ) );

								//---------------------------------------------------------------------------------------------------
								// -
								//---------------------------------------------------------------------------------------------------
							}

#if UNITY_EDITOR
							Debug.Log("텍스트 파일을 로드할 수 없습니다. : "+Library.GetFileNameExt(www.url));
#endif
							/*
							if( this.texture!=null )
							{
								this.texture.Set( www.texture );
							}
							else
							{
								this.texture = new tagTexture(www.texture);
							}
							*/
						}
						else
						if( www.downloadedBytes!=null && www.downloadedBytes>0 )
						{
							Texture2D texture = new Texture2D(0,0);
							texture.LoadImage( CXml.Encode( (www.downloadHandler.data), (SYSTEM.TEXTURE_ENCODE_DENSITY) ) );


#if UNITY_EDITOR
							Debug.Log("텍스트 파일을 로드할 수 없습니다. : "+Library.GetFileNameExt(www.url));
#endif
							/*
							if( this.texture!=null )
							{
								this.texture.Set( texture );
							}
							else
							{
								this.texture = new tagTexture(www.texture);
							}
							*/
						}

						if( this.texture!=null && this.texture.isBinaryLoad )
						{
							this.texture.bytes = www.downloadHandler.data;
						}
					}
					else
					if( (Ext)=="unity3d" || (Ext)=="asset" )
					{
						//-----------------------------------------------------------------------------------------------------------
						// -
						//-----------------------------------------------------------------------------------------------------------
						if( Func.GetString( (www.downloadHandler.data), (0), ("UnityFS".Length) )=="UnityFS" )
						{
#if UNITY_EDITOR
							Debug.Log("애셋번들을 로드할 수 없습니다. : "+www.url);
#endif

//							this.assetBundle = www.assetBundle;
						}
						else
						if( (this.Progresses.Count)<=(0) )
						{
							//-------------------------------------------------------------------------------------------------------
							// -
							//-------------------------------------------------------------------------------------------------------
							this.bytes = www.downloadHandler.data;

							//-------------------------------------------------------------------------------------------------------
							// -
							//-------------------------------------------------------------------------------------------------------
							if( !(Application.isEditor) && Func.IsHttpProtocal(url) )
							{
								//---------------------------------------------------------------------------------------------------
								// -
								//---------------------------------------------------------------------------------------------------
								Debug.Log( "(Cache) => "+Library.GetFileNameExt(url) );

								//---------------------------------------------------------------------------------------------------
								// 에디터에서는 StreamingAssets에 저장할것이기 때문에, 로컬 Cache에는 저장하지 않음
								//---------------------------------------------------------------------------------------------------
								SaveAssetBundleLowData( Library.GetFileNameExt(url), www.downloadHandler.data );

								//---------------------------------------------------------------------------------------------------
								// 비동기 복호화
								//---------------------------------------------------------------------------------------------------
								tagProgress progress = CApp.This.Engine.EncodeAsync(this);
								if( progress!=null )
								{
									this.Progresses.Add( progress );
								}

								//---------------------------------------------------------------------------------------------------
								// -
								//---------------------------------------------------------------------------------------------------
								return false;	//비동기 암호화 해제를 위해, 이후 처리를 중단함
							}

							//-------------------------------------------------------------------------------------------------------
							// -
							//-------------------------------------------------------------------------------------------------------
						}

						//-----------------------------------------------------------------------------------------------------------
						// -
						//-----------------------------------------------------------------------------------------------------------
					}
					else
					if( Ext=="wav" || Ext=="mp3" || Ext=="ogg" )
					{
#if UNITY_EDITOR
						Debug.Log("사운드 파일을 로드할 수 없습니다. : "+www.url);
#endif

//						this.audioClip	= www.GetAudioClip(false);
//						this.bytes		= www.bytes;
					}
					else
					{
						this.text	= www.downloadHandler.text;
						this.bytes	= www.downloadHandler.data;
					}

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					(this.Success)			= (true);

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(Done)	= (true);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (www)!=(null) )
		{
			Reset();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return true;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool IsDone()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (www)!=(null) )
		{
			return (www.isDone);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	public float GetProgress()
	{
		if( www!=null )
		{
			return www.downloadProgress;
		}

		return 0f;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 메모리를 초기화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Release()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(assetBundle)	= (null);
		(bytes)			= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (www)!=(null) )
		{
			Reset();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 프로토콜을 취소하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Reset()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (www)!=(null) )
		{
			www.Dispose();
			(www) = (null);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 애셋번들 데이타를 저장하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void SaveAssetBundleLowData( string filename, byte[] bytes )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		string		path	= CEngine.GetCachePath();
		if( !Directory.Exists(path) )
		{
			Directory.CreateDirectory(path);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		File.WriteAllBytes( (path)+"/"+Library.GetFileName(filename)+".asset", (bytes) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	public static void AssetBundleDecode( byte[] bytes )
	{
		if( bytes==null ) return;

		//헤더 암호화
		int End = Mathf.Min( 64, bytes.Length );
        for( int i=0; i<End; i+=2 )
        {
            bytes[i] = AppsFunc.encode( bytes[i], i );
		}

        for( int i=0; i<bytes.Length; i+=1024 )
        {
			bytes[i] = AppsFunc.encode( bytes[i], i );
        }
	}
}