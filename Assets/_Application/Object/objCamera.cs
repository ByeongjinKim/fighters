using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using System;

//-----------------------------------------------------------------------------------------------------------------------------------
// 카메라 정보를 처리하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class objCamera : MonoBehaviour
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
	public class tagData
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public Transform		transform			= (null);
		public GameObject		gameObject			= (null);
		public Camera			camera				= (null);
		public Transform		cameraTransform		= (null);
		public Light			light				= (null);
		public List<Light>		Lights				= new List<Light>();
		public objZoom			zoom				= (null);
		public objVibrate		vibrate				= (null);
		public objAngle			angle				= (null);
		public objMove			move				= (null);
		public objTracking		tracking			= (null);
		public objTranslate		translate			= (null);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public Ray				ray;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}
	public tagData		data		= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Awake()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(data.transform)		= (transform);
		(data.gameObject)		= (gameObject);
		if( Camera()==(null) ) (data.camera)	= (GetComponentInChildren(typeof(Camera)) as Camera);
		(data.cameraTransform)	= (data.camera.transform);
		(data.zoom)				= (GetComponentInChildren(typeof(objZoom)) as objZoom);
		(data.vibrate)			= (GetComponentInChildren(typeof(objVibrate)) as objVibrate);
		(data.angle)			= (GetComponentInChildren(typeof(objAngle)) as objAngle);
		(data.move)				= (GetComponentInChildren(typeof(objMove)) as objMove);
		(data.tracking)			= (GetComponentInChildren(typeof(objTracking)) as objTracking);
		(data.translate)		= (GetComponentInChildren(typeof(objTranslate)) as objTranslate);

		/*
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Camera().orthographic )
		{
			(Camera().pixelRect)			= new Rect( (0), (0), (Screen.width), (Screen.height) );
			(Camera().orthographicSize)		= Mathf.Min( (tagSystem.GetScreenWidth()/(2)), (tagSystem.GetScreenHeight()/(2)) );
			(Camera().nearClipPlane)		= (-2000);
			(Camera().farClipPlane)			= (2000);
		}
		*/

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( NativeScreen.IsNavigationBar() && (NativeScreen.UnFullScreenHeight)>(0) && (NativeScreen.UnFullScreenHeight)<(Screen.height) )
		{
			(Camera().rect)	= new Rect( (0), (1) - Func.Divide( (NativeScreen.UnFullScreenHeight), (Screen.height) ), (1), (1) );
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		Component[]	lightArray	= GetComponentsInChildren(typeof(Light));
		foreach( Light light in lightArray )
		{
			data.Lights.Add( light );
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	protected CApp		app			= (null);
	protected CPlay		play		= (null);

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Start()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(this.app)		= (CApp.This);
		(this.play)		= (CPlay.This);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (CApp.This)!=(null) )
		{
			CApp.This.Camera.Register( this );
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 회전 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objAngle Angle()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.angle);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 앵글을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Angle( float x, float y, bool immediately=(false) )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( immediately )
		{
			(Transform().localEulerAngles)		= new Vector3( (x), (y), (0) );
		}
		else
		{
			Angle().ON( new Vector3( (x), (y), (0) ) );
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 줌을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objZoom Zoom()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.zoom);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 트랜스폼 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Transform Transform()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (data.transform)==(null) ) Awake();

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.transform);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 게임 오브젝트를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public GameObject _GameObject()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.gameObject);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 카메라 객체의 트랜스 폼을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Transform CameraTransform()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.cameraTransform);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 활성화되어 있는지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool IsActive()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (isActiveAndEnabled);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 레이를 업데이트 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Ray( Vector3 point )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(data.ray)	= data.camera.ScreenPointToRay( point );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 레이를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Ray Ray()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.ray);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 먼쪽 클리핑 거리를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public float Far()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.camera.farClipPlane);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 가까운쪽 클리핑 거리를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public float Near()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.camera.nearClipPlane);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 카메라 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Camera Camera()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.camera);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 스크린 좌표를 월드 좌표로 변환하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Vector3 ScreenToWorldPoint( Vector3 point )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return Camera().ScreenToWorldPoint(point);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 월드 좌표를 뷰포트 좌표로 변환하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Vector3 WorldToViewportPoint( Vector3 point )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return Camera().WorldToViewportPoint(point);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 월드 좌표를 스크린 좌표로 변환하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Vector3 WorldToScreenPoint( Vector3 point )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return Camera().WorldToScreenPoint(point);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 진동을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Vibrate( float value )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		data.vibrate.ON( value );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 배경 색상을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void SetColor( Color color )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(Camera().backgroundColor)	= (color);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void OnDestroy()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (app)!=(null) )
		{
			app.Camera.Release(this);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 라이트 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Light Light()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.light);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 라이트 객체의 활성화를 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Light( bool enable )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (data.light)!=(null) )
		{
//			(data.light.enabled)	= (enable);
			data.light.gameObject.SetActive( enable );
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		foreach( Light light in data.Lights )
		{
//			(light.enabled)		= (enable);
			light.gameObject.SetActive( enable );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 레이어를 삭제하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void AddLayer( int nLayer )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(Camera().cullingMask)	|= (1<<nLayer);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 레이어를 삭제하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void RemoveLayer( int nLayer )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (int)((play.mainCamera.Camera().cullingMask)&(1<<nLayer))>(0) )
		{
			(Camera().cullingMask)	-= (1<<nLayer);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 스카이박스를 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void	SetSkybox( Material mtrl )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
//		if( (mtrl)==(null) )	//(NULL)값을 허용함

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (mtrl)!=(null) )
		{
			(Camera().clearFlags)		= (CameraClearFlags.Skybox);
			(RenderSettings.skybox)		= (mtrl);
		}
		else
		{
			(Camera().clearFlags)		= (CameraClearFlags.SolidColor);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 카메라 정보를 초기화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Reset()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(Camera().transform.localPosition)		= new Vector3();
		(Camera().transform.localEulerAngles)	= new Vector3();

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 추적 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objTracking Tracking()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.tracking);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 이동 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objMove Move()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.move);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void funcCameraTrackingReturn( object wParam=(null), object lParam=(null) )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (wParam)==(null) || (wParam as Transform)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( play.mainCamera.Tracking().Target()==(null) )
		{
			play.mainCamera.Tracking().ON( wParam as Transform );
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public float GetFieldOfView()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Camera()!=(null) )
		{
			return (Camera().fieldOfView);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (0);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void SetFieldOfView( float value )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Camera()!=(null) )
		{
			(Camera().fieldOfView)	= (value);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 이동 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objTranslate Translate()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.translate);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 현재 위치를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Vector3 GetPosition()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (Transform().localPosition);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------