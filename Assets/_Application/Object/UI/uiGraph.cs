using System.Collections;
using System.Collections.Generic;
using UnityEngine.UI;
using UnityEngine;

//-----------------------------------------------------------------------------------------------------------------------------------
// 그래픽 정보를 처리하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class uiGraph : MonoBehaviour
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public static List<uiGraph> Graphes = new List<uiGraph>();
	const int					Cols	= (12);

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
	public class tagData
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public IDENTITY				nIdentity;
		public string				id;
		public GRAPH				nGraph;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public RectTransform		transform		= (null);
		public GameObject			gameObject		= (null);
		public RawImage				image			= (null);
		public RectTransform		centerline		= (null);
		public Text					text			= (null);
		public objControl			control			= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public List<uiGraphStick>	Sticks			= new List<uiGraphStick>();
		public List<Text>			AttachValues	= new List<Text>();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public float				Min				= (0);
		public float				Max				= (0);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	};
	public tagData		data		= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Awake()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.transform)	= (transform as RectTransform);
		(data.gameObject)	= (gameObject);
		if( Image()==(null) )	(data.image) = (GetComponent(typeof(RawImage)) as RawImage);
		if( Text()==(null) )	(data.text) = (GetComponentInChildren(typeof(Text)) as Text);
		(data.control)		= (GetComponent(typeof(objControl)) as objControl);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Graphes.Add(this);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Update()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		int dateIndex = (int)((CPlay.This.serverTime)/(60*60*24)) - (Cols);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( uiGraphStick stick in GetList() )
		{
			Refresh( (stick), (stick.date)-(dateIndex) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.Min)<(0) || (data.centerline)==(null) )
		{
			if( (data.Max)>(0) )
			{
				float height	= (Transform().sizeDelta.y-50);
				float max		= Mathf.Abs(data.Min)+(data.Max);
				float center	= Func.Divide( Mathf.Abs(data.Min), (max) ) * (height);
				if( (center)>=(1) )
				{
					(data.centerline)	= CreateCenterLine(center);
				}
			}
			else
			if( (data.Min)<(0) )
			{
				(data.centerline)	= CreateCenterLine(Transform().sizeDelta.y-50);
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		UpdateValue();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Enable( false );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Initialize( List<tagGraphValue> GraphValues )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (GraphValues)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( tagGraphValue graphValue in GraphValues )
		{
			if( (data.nGraph)==(graphValue.nGraph) )
			{
				Register( (graphValue.date), (graphValue.value) );
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Refresh( uiGraphStick stick, int dateIndex )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (stick)==(null) ) return;
		if( (dateIndex)<(0) || (dateIndex)>(Cols) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		float width		= (Transform().sizeDelta.x) - (20);
		float height	= (Transform().sizeDelta.y) - (50);
		float max		= Mathf.Abs(data.Min)+(data.Max);
		float center	= Func.Divide( Mathf.Abs(data.Min), (max) ) * (height);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (stick.value)>(0) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(stick.Transform().sizeDelta)	= new Vector2( (10), (height)*Func.Divide( (float)(stick.value), (max) ) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Type()==(GRAPH.지출) || Type()==(GRAPH.주가) )
			{
				(stick.Image().color)		= Func.Color( (Color.red), (Image().color.a) );
			}
			else
			{
				(stick.Image().color)		= Func.Color( (Color.blue), (Image().color.a) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		else
		{
			(stick.Transform().pivot)		= new Vector3( (stick.Transform().pivot.x), (1) );
			(stick.Transform().sizeDelta)	= new Vector2( (10), (height)*Func.Divide( (float)Mathf.Abs(stick.value), (max) ) );
			(stick.Image().color)			= Func.Color( (Color.red), (Image().color.a) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(stick.Transform().anchoredPosition)	= new Vector2( -(width/2)+(width/Cols)*(dateIndex), -(Transform().sizeDelta.y/2)+(center) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 그래프를 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Set( IDENTITY nIdentity, string id, GRAPH nGraph=(GRAPH.NOTHING) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !Func.Is(id) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.nIdentity)!=(nIdentity) || (data.id)!=(id) || ( (nGraph)!=(GRAPH.NOTHING) && (data.nGraph)!=(nGraph) ) )
		{
			Clear();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.nIdentity)	= (nIdentity);
		(data.id)			= (id);

		//---------------------------------------------------------------------------------------------------------------------------
		// 그래프 유형
		//---------------------------------------------------------------------------------------------------------------------------
		if( (nGraph)!=(GRAPH.NOTHING) )
		{
			(data.nGraph)	= (nGraph);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void OnDestroy()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Graphes.Remove(this);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 그래프 유형을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public static GRAPH StrToGraphType( string value )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !Func.Is(value) ) return (GRAPH.NOTHING);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		switch( value )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// 공급 (SUPPLY)
			//-----------------------------------------------------------------------------------------------------------------------
			case "SUPPLY":
				return (GRAPH.공급);

			//-----------------------------------------------------------------------------------------------------------------------
			// 수요 (DEMAND)
			//-----------------------------------------------------------------------------------------------------------------------
			case "DEMAND":
				return (GRAPH.수요);

			//-----------------------------------------------------------------------------------------------------------------------
			// 품질 (QUALITY)
			//-----------------------------------------------------------------------------------------------------------------------
			case "QUALITY":
				return (GRAPH.품질);

			//-----------------------------------------------------------------------------------------------------------------------
			// 원가 (COST)
			//-----------------------------------------------------------------------------------------------------------------------
			case "COST":
				return (GRAPH.원가);

			//-----------------------------------------------------------------------------------------------------------------------
			// 매출 (INCOME)
			//-----------------------------------------------------------------------------------------------------------------------
			case "INCOME":
				return (GRAPH.매출);

			//-----------------------------------------------------------------------------------------------------------------------
			// 지출 (EXPENSE)
			//-----------------------------------------------------------------------------------------------------------------------
			case "EXPENSE":
				return (GRAPH.지출);

			//-----------------------------------------------------------------------------------------------------------------------
			// 순이익 (PROFIT)
			//-----------------------------------------------------------------------------------------------------------------------
			case "PROFIT":
				return (GRAPH.순이익);

			//-----------------------------------------------------------------------------------------------------------------------
			// 판매량 (SALES)
			//-----------------------------------------------------------------------------------------------------------------------
			case "SALES":
				return (GRAPH.판매량);

			//-----------------------------------------------------------------------------------------------------------------------
			// 주가 (STOCK)
			//-----------------------------------------------------------------------------------------------------------------------
			case "STOCK":
				return (GRAPH.주가);

			//-----------------------------------------------------------------------------------------------------------------------
			// 자산 (PROPERTY)
			//-----------------------------------------------------------------------------------------------------------------------
			case "PROPERTY":
				return (GRAPH.자산);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			default:
				Debug.Log(value);
				break;

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (GRAPH.NOTHING);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 그래프를 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool Is( IDENTITY nIdentity, string id, GRAPH nGraph )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !Func.Is(id) ) return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.nIdentity)==(nIdentity) && (data.id)==(id) && (data.nGraph)==(nGraph) )
		{
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 그래프 정보를 등록하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Register( int date, float value )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (date)<=(0) ) return;
		if( (value)==(0) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		uiGraphStick stick = Find(date);
		if( (stick)==(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(stick)	= Create();
			if( (stick)!=(null) )
			{
				(stick.date)	= (date);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			Enable();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (stick)!=(null) && (stick.value)!=(value) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(stick.value) = (value);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			Enable();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.Min)	= Mathf.Min( (value), (data.Min) );
		(data.Max)	= Mathf.Max( (value), (data.Max) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !(_GameObject().activeInHierarchy) )
		{
			UpdateValue();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	uiGraphStick Create()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		GameObject		gameObject		= new GameObject();
		RectTransform	transform		= (gameObject.AddComponent(typeof(RectTransform)) as RectTransform);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		transform.SetParent( Transform() );
		(transform.pivot)				= new Vector3( (transform.pivot.x), (0) );
		(transform.localPosition)		= new Vector3();
		(transform.localEulerAngles)	= new Vector3();
		(transform.localScale)			= new Vector3( (1), (1), (1) );
		(transform.sizeDelta)			= new Vector2();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Image image = (gameObject.AddComponent(typeof(Image)) as Image);
		if( (image)!=(null) )
		{
			(image.raycastTarget)	= (false);
			(image.color)			= Func.Color( (Color.red), (Image().color.a) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		uiGraphStick stick = (gameObject.AddComponent(typeof(uiGraphStick)) as uiGraphStick);
		if( (stick)!=(null) )
		{
			GetList().Add( stick );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (stick);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 트랜스폼을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public RectTransform Transform()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.transform);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 게임 오브젝트를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public GameObject _GameObject()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.gameObject);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 활성화를 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void Enable( bool enable=(true) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (enabled)!=(enable) )
		{
			(enabled) = (enable);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 리스트를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public List<uiGraphStick> GetList()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.Sticks);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 그래프를 검색하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	uiGraphStick Find( int date )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (date)<=(0) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( uiGraphStick stick in GetList() )
		{
			if( (stick.date)==(date) )
			{
				return (stick);
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (null);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	RectTransform CreateCenterLine( float center )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		GameObject		gameObject		= new GameObject();
		RectTransform	transform		= (gameObject.AddComponent(typeof(RectTransform)) as RectTransform);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		transform.SetParent( Transform() );
		transform.SetSiblingIndex(0);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(transform.localPosition)		= new Vector3();
		(transform.localEulerAngles)	= new Vector3();
		(transform.localScale)			= new Vector3( (1), (1), (1) );
		(transform.sizeDelta)			= new Vector2( (Transform().sizeDelta.x), (2) );
		(transform.anchoredPosition)	= new Vector2( (0), -(Transform().sizeDelta.y/2)+(center) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Image image = (gameObject.AddComponent(typeof(Image)) as Image);
		if( (image)!=(null) )
		{
			(image.raycastTarget)	= (false);
			(image.color)			= Func.Color( (Color.red), (Image().color.a) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (transform);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 컨트롤 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objControl Control()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.control);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	bool IsCash()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		switch( data.nGraph )
		{
			case (GRAPH.원가):
			case (GRAPH.매출):
			case (GRAPH.지출):
			case (GRAPH.순이익):
			case (GRAPH.주가):
			case (GRAPH.자산):
				return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	float GetValue()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.Max)<=(0) )
		{
			return (data.Min);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.Max);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 그래프 유형을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	GRAPH Type()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.nGraph);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 이미지를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public RawImage Image()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.image);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 문자열 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Text Text()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.text);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 투명값을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Alpha( float value )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(Image().color)	= Func.Color( (Image().color), (value) );
		(Text().color)	= Func.Color( (Text().color), (value) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( uiGraphStick stick in GetList() )
		{
			(stick.Image().color)	= Func.Color( (stick.Image().color), (value) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 그래프 정보를 초기화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void Clear()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( uiGraphStick stick in GetList() )
		{
			Func.Destroy( stick );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		GetList().Clear();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 활성화 되어 있는지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool IsActive()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (_GameObject().activeInHierarchy);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void AttachValue( Text text )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (text)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !data.AttachValues.Contains(text) )
		{
			data.AttachValues.Add(text);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Set( string value )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (value)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(Text().text)	= (value);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( Text text in data.AttachValues )
		{
			if( (text)!=(null) )
			{
				(text.text)	= (value);
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Set( Color color )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(Text().color)	= (color);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( Text text in data.AttachValues )
		{
			if( (text)!=(null) )
			{
				(text.color)	= (color);
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void UpdateValue()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( IsCash() )
		{
			Set( CApp.This.Cash.ExchangeToString( GetValue() ) );
		}
		else
		{
//			Set( CApp.This.Engine.NumberUnit( (long)GetValue() ) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( GetValue()<(0) )
		{
			Set( Func.Color( (Color.red), (Text().color.a) ) );
		}
		else
		{
			Set( Func.Color( (Color.black), (Text().color.a) ) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------