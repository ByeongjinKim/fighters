using UnityEngine;

//-----------------------------------------------------------------------------------------------------------------------------------
// 기업 정보를 처리하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class CViewCompany : ViewPanel
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
	public class tagData : _tagData
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public tagCompany		company				= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public uiCompany		icon				= (null);
		public objControl		upload				= (null);
		public uiIdentity		owner				= (null);
		public uiIdentity		manager				= (null);
		public objControl		stock_publish		= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	};
	public tagData		data		= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ON( tagCompany company )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !app.Company.Is(company) ) return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		bool isChange = Get()!=(company) || !Is(true);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.company)	= (company);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( base.ON(data) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			ForeBack();
			Indigator( app.Language.Get(TEXT.기업_정보를_불러오는_중입니다) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			app.Canvas.FullscreenScrollViewInit( ScrollView()._RectTransform() );

			//-----------------------------------------------------------------------------------------------------------------------
			// 그래프
			//-----------------------------------------------------------------------------------------------------------------------
			Component[] comArray = _Transform().GetComponentsInChildren(typeof(uiGraph));
			foreach( uiGraph graph in comArray )
			{
				graph.Set( (IDENTITY.COMPANY), (company.id) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			ManagementHash.LoadCompany(company.id);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( isChange )
		{
			Fullscreen( new historyCompany(company) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 기업
		//---------------------------------------------------------------------------------------------------------------------------
		Icon().Set(Get());

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( app.Company.IsOwner(Get()) )
		{
			Func.Active(data.upload._GameObject());
		}
		else
		{
			data.upload.Inactive();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 회장 및 최고 경영자 (CEO)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (Get().owner)!=(null) )
		{
			if( Get().owner.IsLoad() )
			{
				Owner().Set(Get().owner);
			}
			else
			if( Func.Is(Get().owner.obj as string) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				switch( Get().owner.type )
				{
					//---------------------------------------------------------------------------------------------------------------
					// 기업 (COMPANY)
					//---------------------------------------------------------------------------------------------------------------
					case (IDENTITY.COMPANY):
						app.Company.Reserve(Get().owner.ID());
						break;

					//---------------------------------------------------------------------------------------------------------------
					// 인물 (PERSON)
					//---------------------------------------------------------------------------------------------------------------
					case (IDENTITY.PERSON):
						app.Person.Reserve(Get().owner.ID());
						break;

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
				}
		
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				Func.Inactive( Owner()._GameObject() );
		
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 최고 경영자 (CEO)
		//---------------------------------------------------------------------------------------------------------------------------
		if( app.Person.Is(Get().Manager()) && Get().owner.Person()==Get().Manager() )
		{
			Func.Inactive( Manager()._GameObject() );
		}
		else
		if( Get().Manager()!=(null) )
		{
			Manager().Set(Get().Manager());
		}
		else
		if( Func.Is(Get().manager as string) )
		{
			app.Person.Reserve(Get().manager as string);
			Func.Inactive( Manager()._GameObject() );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 기업의 소유주가 아닐 경우
		//---------------------------------------------------------------------------------------------------------------------------
		if( Icon()!=(null) && !app.Company.IsOwner(company) )
		{
			if( Icon().Image()!=(null) )	(Icon().Image().raycastTarget)	= (false);
			if( Icon().Text()!=(null) )		(Icon().Text().raycastTarget)	= (false);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( true )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (app.Company.Reserves().Count)>(0) )
			{
				app.ViewIndigator.ON( (app.Company), app.Language.Get(TEXT.기업_정보를_불러오는_중입니다) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (app.Person.Reserves().Count)>(0) )
			{
				app.ViewIndigator.ON( (app.Person), app.Language.Get(TEXT.기업_정보를_불러오는_중입니다) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
#if FALSE
		if( app.Company.IsOwner(Get()) )
		{
			data.stock_publish.Active();
		}
		else
#endif
		{
			data.stock_publish.Inactive();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return base.ON();
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 네비게이션을 처리하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void ONNAVIGATION()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.ViewNavigation.ON( (this), app.Language.Get(Get().name) );

#if UNITY_EDITOR
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( app.Company.IsOwner(Get()) )
		{
			app.ViewNavigation.OnEdit();
		}
#endif

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스가 전면에 출력되었을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void ONFORE()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.ViewBottom.Fore();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 비활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool OFF()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Is(true) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.company)	= (null);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return base.OFF();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 도시 정보를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public tagCompany Get()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.company);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 기업 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public uiCompany Icon()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.icon);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 오너 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public uiIdentity Owner()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.owner);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 매니저 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public uiIdentity Manager()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.manager);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 사업체 정보를 업데이트하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void update( tagCompany company )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (company)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (Get().owner.type)==(IDENTITY.COMPANY) && Get().owner.Company()==(company) )
		{
			Func.Active( Owner()._GameObject() );
			Owner().Set( Get().owner );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인물 정보를 업데이트하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void update( tagPerson person )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (person)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (Get().owner.type)==(IDENTITY.PERSON) && Get().owner.Person()==(person) )
		{
			Func.Active( Owner()._GameObject() );
			Owner().Set( Get().owner );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( ( (Get().owner.type)!=(IDENTITY.PERSON) || Get().owner.Person()!=(person) ) && Get().Manager()==(person) )
		{
			Debug.Log( Get().owner.obj );
			Func.Active( Manager()._GameObject() );
			Manager().Set( Get().Manager() );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 이미지 업로드를 처리하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void funcImageUpload( object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (Application.platform)==(RuntimePlatform.Android) )
		{
#if AUP
			ImagePicker.SetCallback( (funcImageLoad), Get() );
			ImagePicker.GetImage();
#endif
		}
		else
		{
#if SIMPLE_FILE_VIEWER
			play.foreCanvas.ForeBack().ON( this );
			SimpleFileBrowser.FileBrowser.ShowLoadDialog( (onFileOpenSuccess), (onFileOpenCancel), (SimpleFileBrowser.FileBrowser.PickMode.Files), (false) );
#endif
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 이미지를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void funcImageLoad( object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (wParam)==(null) || wParam.GetType()!=typeof(tagCompany) ) return;
		if( (lParam)==(null) || lParam.GetType()!=typeof(string) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagCompany	company		= (wParam as tagCompany);
		string		filepath	= (lParam as string);
		string		ext			= Func.GetExt(filepath);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		play.foreCanvas.ForeBack().OFF( this );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (ext)!="png" && (ext)!="jpg" && (ext)!="jpeg" )
		{
			app.Confirm.ON( app.Language.Get(TEXT.업로드할_수_없는_파일입니다) );
			return;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		byte[]		bytes		= Func.ReadAllBytes(filepath);
		Texture2D	texture		= new Texture2D(0,0);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (bytes.Length)>(0) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			app.ViewIndigator.ON( (this), app.Language.Get(TEXT.이미지를_업로드_중입니다) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			ManagementHash.CompanyPicture( (company), (bytes), Func.GetFileNameExt(filepath) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void onFileOpenSuccess( string[] path )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (path)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		string file = (null);
		if( (path.Length)>(0) )
		{
			(file)	= (path[0]);
		}
		else
		{
			return;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		funcImageLoad( Get(), (file) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void onFileOpenCancel()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		play.foreCanvas.ForeBack().OFF( this );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
    public override void OnNavigationEdit()
    {
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.ViewInput.ON( app.Language.Get(TEXT.기업_이름_변경), (Get().name), (app.Company.funcNameChange) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
    void funcStockPublish( object wParam=(null), object lParam=(null) )
    {
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (wParam)==(null) || wParam.GetType()!=typeof(tagCompany) ) return;
		if( (lParam)==(null) || lParam.GetType()!=typeof(int) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagCompany	company		= (wParam as tagCompany);
		int			Count		= (int)(lParam);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Indigator( app.Language.Get(TEXT.주식을_발행하는중입니다) );
		ManagementHash.StockPublish( (company), (Count) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void OnHistory( tagHistory _history )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (_history)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		historyCompany history = (_history as historyCompany);
		if( (history)!=(null) )
		{
			ON( history.company );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 히스토리를 비교하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool Equals( tagHistory _history )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (_history)==(null) ) return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		historyCompany history = (_history as historyCompany);
		if( base.Equals(_history) && (history.company)==Get() )
		{
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 취소 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONCANCEL( CANCEL Cancel )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Is() )
		{
			return base.ONCANCEL( Cancel );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONCONTROL( objControl control, CONTROL_ACTION Action, tagFocus focus )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(null) ) return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==Icon().Control() && (Action)==(CONTROL_ACTION.SELECT) )
		{
			if( app.Company.IsOwner(Get()) )
			{
				app.Confirm.ON( app.Language.Get(TEXT.기업_로고를_업로드하시겠습니까), (CONFIRM.YESNO), (funcImageUpload) );
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 기업, 회장 및 최고 경영자 (CEO)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==Owner().Control() && (Action)==(CONTROL_ACTION.SELECT) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			switch( Owner().Type() )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// 기업 (COMPANY)
				//-------------------------------------------------------------------------------------------------------------------
				case (IDENTITY.COMPANY):
					app.ViewCompany.ON( Owner().Company() );
					break;

				//-------------------------------------------------------------------------------------------------------------------
				// 인물 (PERSON)
				//-------------------------------------------------------------------------------------------------------------------
				case (IDENTITY.PERSON):
					app.ViewPerson.ON( Owner().Person() );
					break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 최고 경영자 (CEO)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==Manager().Control() && (Action)==(CONTROL_ACTION.SELECT) )
		{
			Debug.Log( Manager().Get() );
			app.ViewPerson.ON( Manager().Person() );
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 주식 발행
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(data.stock_publish) && (Action)==(CONTROL_ACTION.SELECT) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			app.Confirm.ON( app.Language.Get(TEXT.준비중입니다) );

			/*
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( app.Company.IsOwner(Get()) )
			{
				app.Confirm.ON( app.Language.Get(TEXT.주식을_발행하시겠습니까), (CONFIRM.YESNO), (funcStockPublish), Get(), (5000) );
			}
			*/

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 메모리를 초기화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void Unloader()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.icon)				= (null);
		(data.upload)			= (null);
		(data.owner)			= (null);
		(data.manager)			= (null);
		(data.stock_publish)	= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void Loader()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		base.Loader( Resources.Load("ApplicationLoader/View/ViewCompany"), (play.uiCanvas) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.icon)				= (Func.Get( _Transform(), "Left-Top/Icon" ).GetComponent(typeof(uiCompany)) as uiCompany);
		(data.upload)			= (Func.Get( _Transform(), "Left-Top/Icon/Option" ).GetComponent(typeof(objControl)) as objControl);
		(data.owner)			= (Func.Get( _Transform(), "Left-Top/Owner" ).GetComponent(typeof(uiIdentity)) as uiIdentity);
		(data.manager)			= (Func.Get( _Transform(), "Left-Top/Manager" ).GetComponent(typeof(uiIdentity)) as uiIdentity);
		(data.stock_publish)	= (Func.Get( _Transform(), "Stock-Publish" ).GetComponent(typeof(objControl)) as objControl);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------