using System.Collections.Generic;
using System.Xml;
using System.IO;
using System;
using UnityEngine;

//아이템의 정보를 처리하기 위한 클래스
public class AppsItemListener : FrameworkBehaviour
{
	public class _tagData
	{
		public string				PathName		= (null);
		public string				className		= (null);
		public string				typeName		= (null);

		public List<tagAppsItem>	AppsItems		= new List<tagAppsItem>();
	};
	public _tagData _data = new _tagData();

	//아이템 정보를 불러오기 위한 함수
	public void _Load()
	{
		if( Library.Is(ClassName()) )
		{
			LoadCaches();   //캐시 데이타로부터 정보를 불러옴
		}
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 캐시 데이타로부터 아이템 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void LoadCaches()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !Directory.Exists(GetPath()) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		string[]	Directorys	= Directory.GetDirectories(GetPath());
		if( (Directorys)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		string		filepath	= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( string directory in Directorys )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
#if UNITY_EDITOR && !ENCODE_CACHE
			(filepath)	= (directory)+"/content.xml";
#else
			(filepath)	= (directory)+"/content.data";
#endif

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( File.Exists(filepath) )
			{
				LoadCache( filepath );
			}
			else
			{
				Debug.LogWarning("데이타 파일이 존재하지 않음. 서버로부터 업데이트가 필요함 : "+(filepath));
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 파일 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void LoadCache( string filepath )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (filepath)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagAppsItem		appsItem	= XmlLoad(filepath);
		if( (appsItem)!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			tagAppsItem		find	= _Find(appsItem.id);
			if( (find)!=(null) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				Debug.LogWarning( "중복된 로드 => "+(appsItem) );

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
			else
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				_Register( appsItem );

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				OnLoadCache( appsItem );

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//클래스를 초기화 하기 위한 함수
	protected void Initialize( _tagData data, string pathName, string className, string typeName )
	{
//		if( data==null ) return;		//(NULL)값을 허용함
//		if( className==null ) return;	//(NULL)값을 허용함
//		if( typeName==null ) return;	//(NULL)값을 허용함

		if( data!=null )
		{
			_data = data;
		}

		Data().PathName		= pathName;
		Data().className	= className;
		Data().typeName		= typeName;

		Apps.AddListener( this );
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 아이템 정보를 전송받기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void onItemState( AppsParameter col )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (col)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagAppsItem		appsItem	= _Find( col.Get("id") );
		bool			deleted		= col.GetBoolean("deleted");

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( deleted )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			Delete( appsItem );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		else
		if( (appsItem)!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			update( (appsItem), (col) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		else
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(appsItem)	= Register( col );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !(deleted) )
		{
			XmlSave( appsItem );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
#if UNITY_EDITOR// && ADVANCE_LOAD
		if( (appsItem)!=(null) && appsItem.IsResourceUpdate() )
		{
			Download( appsItem );
		}
#endif

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 아이템을 검색하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public tagAppsItem _Find( string id )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (id)==(null) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( tagAppsItem appsItem in _GetList() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (appsItem.id)==(id) )
			{
				return (appsItem);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (null);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 아이템을 검색하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public tagAppsItem _FindFromTag( string tag )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (tag)==(null) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( tagAppsItem appsItem in _GetList() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (appsItem.tag)==(tag) )
			{
				return (appsItem);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (null);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 아이템을 검색하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public tagAppsItem _FindFromIndex( string index )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (index)==(null) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( tagAppsItem appsItem in _GetList() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (appsItem.index)==(index) )
			{
				return (appsItem);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (null);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 아이템 정보를 등록하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	tagAppsItem Register( AppsParameter col )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (col)==(null) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagAppsItem		appsItem	= New();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(appsItem.id)	= col.Get("id");

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		update( (appsItem), (col) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		_Register( appsItem );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (appsItem);
	}

	//아이템을 등록하기 위한 함수
	void _Register( tagAppsItem appsitem )
	{
		if( appsitem==null ) return;

		appsitem.eventListener = this;
		_GetList().Add( appsitem );
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 아이템 정보를 삭제하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void Delete( tagAppsItem appsItem )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (appsItem)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		OnDelete( appsItem );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Func.Delete( GetPath(appsItem.id) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		_GetList().Remove( appsItem );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( appsItem.AssetBundle()!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Application.isEditor )
			{
				Debug.Log( "(StreamingAsset-Delete) => "+Library.GetFileName(appsItem.AssetBundle().url)+".asset" );
				Func.Delete( CEngine.GetStreamingPath( (appsItem.AssetBundle().url), (false) ) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( true )
			{
#if UNITY_EDITOR
				Debug.Log( "(Cache-Delete) => "+CEngine.GetCachePath(appsItem.AssetBundle().url) );
#endif
				Func.Delete( CEngine.GetCachePath(appsItem.AssetBundle().url) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (appsItem.CorverTexture)!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (Application.isEditor) && Library.IsFile( CEngine.GetStreamingPath((appsItem.CorverTexture.url), (false)) ) )
			{
				Debug.Log( "(StreamingAsset-Delete) => "+Library.GetFileName(appsItem.CorverTexture.url) );
				Func.Delete( CEngine.GetStreamingPath( (appsItem.CorverTexture.url), (false) ) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Library.IsFile( CEngine.GetCachePath(appsItem.CorverTexture.url) ) )
			{
#if UNITY_EDITOR
				Debug.Log( "(Cache-Delete) => "+CEngine.GetCachePath(appsItem.CorverTexture.url) );
#endif
				Func.Delete( CEngine.GetCachePath(appsItem.CorverTexture.url) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		appsItem.AssetBundle().Unload();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 아이템 정보를 삭제하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	protected virtual void OnDelete( tagAppsItem appsItem )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public _tagData Data()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (_data);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 경로 이름을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public string PathName()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (Data().PathName);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 클래스 이름을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public string ClassName()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (Data().className);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 타입 이름을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public string TypeName()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (Data().typeName);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 캐시 데이타의 경로를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public string GetPath()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return CEngine.GetPath()+"/"+PathName();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 아이템 데이타의 경로를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public string GetPath( string id )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (id)==(null) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return GetPath()+"/"+(id);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 아이템 객체를 생성하기 위한 함수 
	//-------------------------------------------------------------------------------------------------------------------------------
	protected virtual tagAppsItem New()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return new tagAppsItem();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 아이템 리스트를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public List<tagAppsItem> _GetList()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (Data().AppsItems);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 로컬에 저장된 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public virtual void OnLoadCache( tagAppsItem appsItem, AppsParameter col=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (appsItem)==(null) ) return;
//		if( (col)==(null) ) return;	//(NULL)값을 허용함

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML 파일을 저장하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public virtual void OnXmlSave( XmlTextWriter xmlWriter, tagAppsItem appsItem )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (xmlWriter)==(null) ) return;
		if( (appsItem)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML 파일을 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public virtual void OnXmlLoad( XmlNode pNode, tagAppsItem appsItem )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (pNode)==(null) ) return;
		if( (appsItem)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 이름을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public string _GetName( tagAppsItem appsItem )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (appsItem)==(null) ) return "(NOTHING)";

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return Func.CH( (appsItem.name), (appsItem.displayName) );
	}

	//리소스를 다운로드하기 위한 함수
	public virtual void Download( tagAppsItem appsitem, Action<object, object> func=null, object wParam=null, object lParam=null )
	{
		if( appsitem==null ) return;
//		if( func==null ) return;	//(NULL)값을 허용함
//		if( wParam==null ) return;	//(NULL)값을 허용함
//		if( lParam==null ) return;	//(NULL)값을 허용함

		if( lParam==null )
		{
			lParam = appsitem;
		}

		if( appsitem.AssetBundle()!=null && appsitem.AssetBundle().Is() && ( !Func.IsAssetBundle(appsitem.AssetBundle().url) || appsitem.AssetBundle().IsVersion() ) && !appsitem.AssetBundle().IsLoad() )
		{
			app.Download.ON( appsitem.Name(), appsitem.AssetBundle() );
		}

		if( appsitem.CorverTexture!=null && appsitem.CorverTexture.Is() && !appsitem.CorverTexture.IsLoad() )
		{
			app.Download.ON( appsitem.Name(), appsitem.CorverTexture );
		}

		if( func!=null )
		{
			app.Download.SetCallback( func, wParam, lParam );
		}

		if( app.Download.Is() && app.ViewLoading.Is() )
		{
			app.Download.Loading();
		}
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 리소스를 다운로드하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public virtual void Download( string id, Action<object, object> func=(null), object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (id)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Download( _Find(id), (func), (wParam), (lParam) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 메인 에셋을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public GameObject GetMainAsset( tagAppsItem appsitem )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (appsitem)==(null) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( appsitem.AssetBundle()!=(null) && appsitem.AssetBundle().Is() && appsitem.AssetBundle().IsLoad() )
		{
			return appsitem.AssetBundle().GetMainAsset();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (null);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 모든 커버텍스쳐를 로드하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void CorverTextureAllDownload()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( tagAppsItem appsitem in _GetList() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (appsitem.CorverTexture)!=(null) && appsitem.CorverTexture.Is() && !appsitem.CorverTexture.IsLoad() )
			{
				CorverTextureDownload( appsitem );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 커버 텍스쳐를 로드하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void CorverTextureDownload( tagAppsItem appsitem, Action<object, object> func=(null), object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (appsitem)==(null) ) return;
//		if( (func)==(null) ) return;	//(NULL)값을 허용함
//		if( (wParam)==(null) ) return;	//(NULL)값을 허용함
//		if( (lParam)==(null) ) return;	//(NULL)값을 허용함

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (appsitem.CorverTexture)!=(null) && appsitem.CorverTexture.Is() && !appsitem.CorverTexture.IsLoad() )
		{
			app.Download.ON( appsitem.Name(), (appsitem.CorverTexture), (func), (wParam), (lParam) );
		}
		else
		if( (func)!=(null) )
		{
			func( (wParam), (lParam) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 아이템 정보를 업데이트 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void update( tagAppsItem appsItem, AppsParameter col )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (appsItem)==(null) ) return;
		if( (col)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(appsItem.name)				= col.Get("name");
		(appsItem.displayName)		= Func.CH( (name), col.Get("displayName") );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(appsItem.Class)			= AppsFunc.GetUpdateClass(col.Get("class"));
		(appsItem.Type)				= AppsFunc.GetUpdateType(col.Get("type"));

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(appsItem.parent)			= col.Get("parent");
		(appsItem.resource)			= col.Get("resource");
		(appsItem.tag)				= col.Get("tag");
		(appsItem.index)			= col.Get("index");
		(appsItem.alias)			= col.Get("alias");

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(appsItem.point)			= col.GetInt("point");
		(appsItem.cash)				= col.GetInt("cash");
		(appsItem.price)			= col.GetInt("price");
		(appsItem.value)			= col.GetInt("value");
		(appsItem.description)		= col.Get("description");
		
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(appsItem.nonstorage)		= col.GetBoolean("nonstorage");
		(appsItem.no_bundle)		= col.GetBoolean("no_bundle");
		(appsItem.visible)			= col.GetBoolean("visible");
		(appsItem.sale)				= col.GetBoolean("sale");
		(appsItem.unavailable)		= col.GetBoolean("unavailable");

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		AppsFunc.Parse( (appsItem.assetBundleAndroid), col.Get("AssetBundleAndroid") );
		AppsFunc.Parse( (appsItem.assetBundleWindows), col.Get("AssetBundleWindows") );
		AppsFunc.Parse( (appsItem.assetBundleIOS), col.Get("AssetBundleIOS") );
		AppsFunc.Parse( (appsItem.CorverTexture), col.Get("CorverTexture") );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(appsItem.Update)			= (true);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		OnLoadCache( (appsItem), (col) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML파일을 저장하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void XmlSave( tagAppsItem appsItem )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (appsItem)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Directory.CreateDirectory( GetPath() );
		Directory.CreateDirectory( GetPath(appsItem.id) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		XmlDocument     xmlDoc      = new XmlDocument();

		string          filepath    = GetPath(appsItem.id)+"/content.xml";

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		XmlTextWriter   xmlWriter   = new XmlTextWriter( (filepath), (null) );
		(xmlWriter.Formatting)      = (Formatting.Indented);
		(xmlWriter.Indentation)     = (4);
		xmlWriter.WriteStartDocument();
		xmlWriter.WriteStartElement( ClassName() );
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			CXml.WriteNodeValue( (xmlWriter), "id",					(appsItem.id) );
			CXml.WriteNodeValue( (xmlWriter), "name",				(appsItem.name) );
			CXml.WriteNodeValue( (xmlWriter), "displayName",		(appsItem.displayName) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			CXml.WriteNodeValue( (xmlWriter), "Class",				(appsItem.Class.ToString()) );
			CXml.WriteNodeValue( (xmlWriter), "Type",				(appsItem.Type.ToString()) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			CXml.WriteNodeValue( (xmlWriter), "parent",				(appsItem.parent) );
			CXml.WriteNodeValue( (xmlWriter), "resource",			(appsItem.resource) );
			CXml.WriteNodeValue( (xmlWriter), "tag",				(appsItem.tag) );
			CXml.WriteNodeValue( (xmlWriter), "index",				(appsItem.index) );
			CXml.WriteNodeValue( (xmlWriter), "alias",				(appsItem.alias) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			CXml.WriteNodeValue( (xmlWriter), "point",				(appsItem.point) );
			CXml.WriteNodeValue( (xmlWriter), "cash",				(appsItem.cash) );
			CXml.WriteNodeValue( (xmlWriter), "price",				(appsItem.price) );
			CXml.WriteNodeValue( (xmlWriter), "value",				(appsItem.value) );
			CXml.WriteNodeValue( (xmlWriter), "description",		(appsItem.description) );
			
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			CXml.WriteNodeValue( (xmlWriter), "nonstorage",			(appsItem.nonstorage) );
			CXml.WriteNodeValue( (xmlWriter), "no_bundle",			(appsItem.no_bundle) );
			CXml.WriteNodeValue( (xmlWriter), "visible",			(appsItem.visible) );
			CXml.WriteNodeValue( (xmlWriter), "sale",				(appsItem.sale) );
			CXml.WriteNodeValue( (xmlWriter), "unavailable",		(appsItem.unavailable) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			CXml.WriteNodeValue( (xmlWriter), "AssetBundleAndroid",	(appsItem.assetBundleAndroid) );
			CXml.WriteNodeValue( (xmlWriter), "AssetBundleWindows",	(appsItem.assetBundleWindows) );
			CXml.WriteNodeValue( (xmlWriter), "AssetBundleIOS",		(appsItem.assetBundleIOS) );
			CXml.WriteNodeValue( (xmlWriter), "CorverTexture",		(appsItem.CorverTexture) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			OnXmlSave( (xmlWriter), (appsItem) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			Debug.Log("저장됨 => "+(appsItem));

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		xmlWriter.WriteEndElement();
		xmlWriter.WriteEndDocument();
		xmlWriter.Close();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
#if !UNITY_EDITOR || ENCODE_CACHE
		CXml.Encode( filepath );
#endif

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML 파일 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	tagAppsItem XmlLoad( string filepath )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (filepath)==(null) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
#if UNITY_EDITOR && !ENCODE_CACHE
		XmlDocument			xmlDoc			= CXml.Load(filepath);
#else
		TextAsset			textAsset		= new TextAsset(CXml.Decode(CXml.EncodeXmlPath(filepath)));
		XmlDocument			xmlDoc			= CXml.Load( textAsset );
#endif
		if( (xmlDoc)==(null) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagAppsItem			appsItem		= New();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		XmlNode				pNode			= xmlDoc.SelectSingleNode( ClassName() );
		/*
		if( (pNode)==(null) )
		{
			for( int i=0; i<(xmlDoc.ChildNodes.Count); i++ )
			{
				Debug.Log( xmlDoc.ChildNodes.Item(i).Name );
			}
		}
		*/

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (pNode)!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(appsItem.id)				= CXml.GetChildValue( (pNode), "id" );
			(appsItem.name)				= CXml.GetChildValue( (pNode), "name" );
			(appsItem.displayName)		= CXml.GetChildValue( (pNode), "displayName" );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(appsItem.Class)			= AppsFunc.GetUpdateClass( CXml.GetChildValue( (pNode), "Class" ) );
			(appsItem.Type)				= AppsFunc.GetUpdateType( CXml.GetChildValue( (pNode), "Type" ) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(appsItem.parent)			= CXml.GetChildValue( (pNode),	"parent" );
			(appsItem.resource)			= CXml.GetChildValue( (pNode),	"resource" );
			(appsItem.tag)				= CXml.GetChildValue( (pNode),	"tag" );
			(appsItem.index)			= CXml.GetChildValue( (pNode),	"index" );
			(appsItem.alias)			= CXml.GetChildValue( (pNode),	"alias" );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(appsItem.point)			= CXml.GetChildInt( (pNode),	"point" );
			(appsItem.cash)				= CXml.GetChildInt( (pNode),	"cash" );
			(appsItem.price)			= CXml.GetChildInt( (pNode),	"price" );
			(appsItem.value)			= CXml.GetChildInt( (pNode),	"value" );
			(appsItem.description)		= CXml.GetChildValue( (pNode),	"description" );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(appsItem.nonstorage)		= CXml.GetChildBoolean( (pNode), "nonstorage" );
			(appsItem.no_bundle)		= CXml.GetChildBoolean( (pNode), "no_bundle" );
			(appsItem.visible)			= CXml.GetChildBoolean( (pNode), "visible" );
			(appsItem.sale)				= CXml.GetChildBoolean( (pNode), "sale" );
			(appsItem.unavailable)		= CXml.GetChildBoolean( (pNode), "unavailable" );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			CXml.GetChildValue( (pNode), (appsItem.assetBundleAndroid),	"AssetBundleAndroid" );
			CXml.GetChildValue( (pNode), (appsItem.assetBundleWindows),	"AssetBundleWindows" );
			CXml.GetChildValue( (pNode), (appsItem.assetBundleIOS),		"AssetBundleIOS" );
			CXml.GetChildValue( (pNode), (appsItem.CorverTexture),		"CorverTexture" );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			OnXmlLoad( (pNode), (appsItem) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (appsItem);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------